Grammar

    0 $accept: exp $end

    1 exp: exp '+' exp
    2    | exp '-' exp
    3    | '(' exp ')'
    4    | NUM


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3
')' (41) 3
'+' (43) 1
'-' (45) 2
error (256)
NUM (258) 4


Nonterminals, with rules where they appear

$accept (8)
    on left: 0
exp (9)
    on left: 1 2 3 4, on right: 0 1 2 3


State 0

    0 $accept: . exp $end

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    exp  go to state 3


State 1

    4 exp: NUM .

    $default  reduce using rule 4 (exp)


State 2

    3 exp: '(' . exp ')'

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    exp  go to state 4


State 3

    0 $accept: exp . $end
    1 exp: exp . '+' exp
    2    | exp . '-' exp

    $end  shift, and go to state 5
    '+'   shift, and go to state 6
    '-'   shift, and go to state 7


State 4

    1 exp: exp . '+' exp
    2    | exp . '-' exp
    3    | '(' exp . ')'

    '+'  shift, and go to state 6
    '-'  shift, and go to state 7
    ')'  shift, and go to state 8


State 5

    0 $accept: exp $end .

    $default  accept


State 6

    1 exp: exp '+' . exp

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    exp  go to state 9


State 7

    2 exp: exp '-' . exp

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    exp  go to state 10


State 8

    3 exp: '(' exp ')' .

    $default  reduce using rule 3 (exp)


State 9

    1 exp: exp . '+' exp
    1    | exp '+' exp .
    2    | exp . '-' exp

    $default  reduce using rule 1 (exp)


State 10

    1 exp: exp . '+' exp
    2    | exp . '-' exp
    2    | exp '-' exp .

    $default  reduce using rule 2 (exp)

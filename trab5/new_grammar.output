Terminals unused in grammar

   ERRU


Grammar

    0 $accept: program $end

    1 program: globalStmtList

    2 globalStmtList: %empty
    3               | globalStmtList globalStmt

    4 globalStmt: defFun
    5           | declFun ';'
    6           | declOrdeclInitVar
    7           | declFun error

    8 $@1: %empty

    9 declFun: AHEAD BASE_TYPE ID $@1 '(' paramListVoid ')'

   10 typeAndNameSign: BASE_TYPE ID
   11                | BASE_TYPE ID '[' num ']'
   12                | MAT_TYPE BASE_TYPE ID '[' num ']' '[' num ']'

   13 declOrdeclInitVar: typeAndNameSign ';'
   14                  | typeAndNameSign '=' rvalue ';'
   15                  | typeAndNameSign '=' rvalue error

   16 paramListVoid: paramList
   17              | %empty

   18 paramList: paramList ',' param
   19          | param

   20 param: BASE_TYPE ID
   21      | BASE_TYPE ID '[' ']'
   22      | MAT_TYPE BASE_TYPE ID

   23 localStmtList: localStmtList localStmt
   24              | %empty

   25 localStmt: call ';'
   26          | lvalue '=' rvalue ';'
   27          | flowControl
   28          | loop
   29          | RETURN expr ';'
   30          | RETURN expr error
   31          | IREAD '(' lvalue ')' ';'
   32          | FREAD '(' lvalue ')' ';'
   33          | PRINT '(' rvalue ')' ';'
   34          | PRINT '(' V_ASCII ')' ';'
   35          | COPY '(' lvalue lvalue ')' ';'
   36          | ';'

   37 flowControl: IF '(' expr ')' block ELSE flowControl
   38            | IF '(' expr ')' block ELSE block
   39            | IF '(' expr ')' block
   40            | IF '(' expr error block ELSE block
   41            | IF error expr ')' block ELSE block
   42            | IF '(' error ')' block

   43 loop: WHILE '(' expr ')' block

   44 $@2: %empty

   45 defFun: BASE_TYPE ID '(' $@2 paramListVoid ')' '{' declList localStmtList '}'

   46 numListList: numListList '{' numList '}'
   47            | %empty

   48 numList: numList ',' num
   49        | num

   50 block: '{' localStmtList '}'

   51 declList: declList declOrdeclInitVar
   52         | %empty

   53 expr: expr '+' expr
   54     | expr '-' expr
   55     | expr '*' expr
   56     | expr '/' expr
   57     | expr '%' expr
   58     | expr '@' expr
   59     | expr MAT_POW expr
   60     | expr EQ expr
   61     | expr NEQ expr
   62     | expr GE expr
   63     | expr LE expr
   64     | expr '>' expr
   65     | expr '<' expr
   66     | expr AND expr
   67     | expr OR expr
   68     | '!' expr
   69     | '&' expr
   70     | '(' expr ')'
   71     | ICAST '(' expr ')'
   72     | FCAST '(' expr ')'
   73     | lvalue
   74     | call
   75     | num

   76 call: ID '(' argList ')'
   77     | ID '(' ')'

   78 argList: argList ',' arg
   79        | arg

   80 arg: lvalue
   81    | ID '(' expr ')' '(' expr ')'

   82 num: V_INT
   83    | V_FLOAT

   84 lvalue: ID
   85       | ID '[' expr ']'
   86       | ID '[' expr ']' '[' expr ']'

   87 rvalue: expr
   88       | '{' numList '}'
   89       | '{' numListList '}'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 68
'%' (37) 57
'&' (38) 69
'(' (40) 9 31 32 33 34 35 37 38 39 40 42 43 45 70 71 72 76 77 81
')' (41) 9 31 32 33 34 35 37 38 39 41 42 43 45 70 71 72 76 77 81
'*' (42) 55
'+' (43) 53
',' (44) 18 48 78
'-' (45) 54
'/' (47) 56
';' (59) 5 13 14 25 26 29 31 32 33 34 35 36
'<' (60) 65
'=' (61) 14 15 26
'>' (62) 64
'@' (64) 58
'[' (91) 11 12 21 85 86
']' (93) 11 12 21 85 86
'{' (123) 45 46 50 88 89
'}' (125) 45 46 50 88 89
error (256) 7 15 30 40 41 42
EQ (258) 60
NEQ (259) 61
GE (260) 62
LE (261) 63
AND (262) 66
OR (263) 67
MAT_POW (264) 59
BASE_TYPE (265) 9 10 11 12 20 21 22 45
WHILE (266) 43
V_INT (267) 82
V_FLOAT (268) 83
V_ASCII (269) 34
AHEAD (270) 9
MAT_TYPE (271) 12 22
IF (272) 37 38 39 40 41 42
ID (273) 9 10 11 12 20 21 22 45 76 77 81 84 85 86
ICAST (274) 71
FCAST (275) 72
ELSE (276) 37 38 40 41
RETURN (277) 29 30
PRINT (278) 33 34
IREAD (279) 31
FREAD (280) 32
COPY (281) 35
ERRU (282)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
globalStmtList (49)
    on left: 2 3, on right: 1 3
globalStmt (50)
    on left: 4 5 6 7, on right: 3
declFun (51)
    on left: 9, on right: 5 7
$@1 (52)
    on left: 8, on right: 9
typeAndNameSign (53)
    on left: 10 11 12, on right: 13 14 15
declOrdeclInitVar (54)
    on left: 13 14 15, on right: 6 51
paramListVoid (55)
    on left: 16 17, on right: 9 45
paramList (56)
    on left: 18 19, on right: 16 18
param (57)
    on left: 20 21 22, on right: 18 19
localStmtList (58)
    on left: 23 24, on right: 23 45 50
localStmt (59)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36, on right: 23
flowControl (60)
    on left: 37 38 39 40 41 42, on right: 27 37
loop (61)
    on left: 43, on right: 28
defFun (62)
    on left: 45, on right: 4
$@2 (63)
    on left: 44, on right: 45
numListList (64)
    on left: 46 47, on right: 46 89
numList (65)
    on left: 48 49, on right: 46 48 88
block (66)
    on left: 50, on right: 37 38 39 40 41 42 43
declList (67)
    on left: 51 52, on right: 45 51
expr (68)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75, on right: 29 30 37 38 39 40 41 43 53 54 55 56 57
    58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 81 85 86 87
call (69)
    on left: 76 77, on right: 25 74
argList (70)
    on left: 78 79, on right: 76 78
arg (71)
    on left: 80 81, on right: 78 79
num (72)
    on left: 82 83, on right: 11 12 48 49 75
lvalue (73)
    on left: 84 85 86, on right: 26 31 32 35 73 80
rvalue (74)
    on left: 87 88 89, on right: 14 15 26 33


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (globalStmtList)

    program         go to state 1
    globalStmtList  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: globalStmtList .
    3 globalStmtList: globalStmtList . globalStmt

    BASE_TYPE  shift, and go to state 4
    AHEAD      shift, and go to state 5
    MAT_TYPE   shift, and go to state 6

    $default  reduce using rule 1 (program)

    globalStmt         go to state 7
    declFun            go to state 8
    typeAndNameSign    go to state 9
    declOrdeclInitVar  go to state 10
    defFun             go to state 11


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 typeAndNameSign: BASE_TYPE . ID
   11                | BASE_TYPE . ID '[' num ']'
   45 defFun: BASE_TYPE . ID '(' $@2 paramListVoid ')' '{' declList localStmtList '}'

    ID  shift, and go to state 12


State 5

    9 declFun: AHEAD . BASE_TYPE ID $@1 '(' paramListVoid ')'

    BASE_TYPE  shift, and go to state 13


State 6

   12 typeAndNameSign: MAT_TYPE . BASE_TYPE ID '[' num ']' '[' num ']'

    BASE_TYPE  shift, and go to state 14


State 7

    3 globalStmtList: globalStmtList globalStmt .

    $default  reduce using rule 3 (globalStmtList)


State 8

    5 globalStmt: declFun . ';'
    7           | declFun . error

    error  shift, and go to state 15
    ';'    shift, and go to state 16


State 9

   13 declOrdeclInitVar: typeAndNameSign . ';'
   14                  | typeAndNameSign . '=' rvalue ';'
   15                  | typeAndNameSign . '=' rvalue error

    ';'  shift, and go to state 17
    '='  shift, and go to state 18


State 10

    6 globalStmt: declOrdeclInitVar .

    $default  reduce using rule 6 (globalStmt)


State 11

    4 globalStmt: defFun .

    $default  reduce using rule 4 (globalStmt)


State 12

   10 typeAndNameSign: BASE_TYPE ID .
   11                | BASE_TYPE ID . '[' num ']'
   45 defFun: BASE_TYPE ID . '(' $@2 paramListVoid ')' '{' declList localStmtList '}'

    '('  shift, and go to state 19
    '['  shift, and go to state 20

    $default  reduce using rule 10 (typeAndNameSign)


State 13

    9 declFun: AHEAD BASE_TYPE . ID $@1 '(' paramListVoid ')'

    ID  shift, and go to state 21


State 14

   12 typeAndNameSign: MAT_TYPE BASE_TYPE . ID '[' num ']' '[' num ']'

    ID  shift, and go to state 22


State 15

    7 globalStmt: declFun error .

    $default  reduce using rule 7 (globalStmt)


State 16

    5 globalStmt: declFun ';' .

    $default  reduce using rule 5 (globalStmt)


State 17

   13 declOrdeclInitVar: typeAndNameSign ';' .

    $default  reduce using rule 13 (declOrdeclInitVar)


State 18

   14 declOrdeclInitVar: typeAndNameSign '=' . rvalue ';'
   15                  | typeAndNameSign '=' . rvalue error

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31

    expr    go to state 32
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35
    rvalue  go to state 36


State 19

   45 defFun: BASE_TYPE ID '(' . $@2 paramListVoid ')' '{' declList localStmtList '}'

    $default  reduce using rule 44 ($@2)

    $@2  go to state 37


State 20

   11 typeAndNameSign: BASE_TYPE ID '[' . num ']'

    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26

    num  go to state 38


State 21

    9 declFun: AHEAD BASE_TYPE ID . $@1 '(' paramListVoid ')'

    $default  reduce using rule 8 ($@1)

    $@1  go to state 39


State 22

   12 typeAndNameSign: MAT_TYPE BASE_TYPE ID . '[' num ']' '[' num ']'

    '['  shift, and go to state 40


State 23

   68 expr: '!' . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 41
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 24

   69 expr: '&' . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 42
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 25

   82 num: V_INT .

    $default  reduce using rule 82 (num)


State 26

   83 num: V_FLOAT .

    $default  reduce using rule 83 (num)


State 27

   76 call: ID . '(' argList ')'
   77     | ID . '(' ')'
   84 lvalue: ID .
   85       | ID . '[' expr ']'
   86       | ID . '[' expr ']' '[' expr ']'

    '('  shift, and go to state 43
    '['  shift, and go to state 44

    $default  reduce using rule 84 (lvalue)


State 28

   71 expr: ICAST . '(' expr ')'

    '('  shift, and go to state 45


State 29

   72 expr: FCAST . '(' expr ')'

    '('  shift, and go to state 46


State 30

   70 expr: '(' . expr ')'

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 47
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 31

   88 rvalue: '{' . numList '}'
   89       | '{' . numListList '}'

    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26

    $default  reduce using rule 47 (numListList)

    numListList  go to state 48
    numList      go to state 49
    num          go to state 50


State 32

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr
   87 rvalue: expr .

    EQ       shift, and go to state 51
    NEQ      shift, and go to state 52
    GE       shift, and go to state 53
    LE       shift, and go to state 54
    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 87 (rvalue)


State 33

   74 expr: call .

    $default  reduce using rule 74 (expr)


State 34

   75 expr: num .

    $default  reduce using rule 75 (expr)


State 35

   73 expr: lvalue .

    $default  reduce using rule 73 (expr)


State 36

   14 declOrdeclInitVar: typeAndNameSign '=' rvalue . ';'
   15                  | typeAndNameSign '=' rvalue . error

    error  shift, and go to state 66
    ';'    shift, and go to state 67


State 37

   45 defFun: BASE_TYPE ID '(' $@2 . paramListVoid ')' '{' declList localStmtList '}'

    BASE_TYPE  shift, and go to state 68
    MAT_TYPE   shift, and go to state 69

    $default  reduce using rule 17 (paramListVoid)

    paramListVoid  go to state 70
    paramList      go to state 71
    param          go to state 72


State 38

   11 typeAndNameSign: BASE_TYPE ID '[' num . ']'

    ']'  shift, and go to state 73


State 39

    9 declFun: AHEAD BASE_TYPE ID $@1 . '(' paramListVoid ')'

    '('  shift, and go to state 74


State 40

   12 typeAndNameSign: MAT_TYPE BASE_TYPE ID '[' . num ']' '[' num ']'

    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26

    num  go to state 75


State 41

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr
   68     | '!' expr .

    $default  reduce using rule 68 (expr)


State 42

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr
   69     | '&' expr .

    $default  reduce using rule 69 (expr)


State 43

   76 call: ID '(' . argList ')'
   77     | ID '(' . ')'

    ID   shift, and go to state 76
    ')'  shift, and go to state 77

    argList  go to state 78
    arg      go to state 79
    lvalue   go to state 80


State 44

   85 lvalue: ID '[' . expr ']'
   86       | ID '[' . expr ']' '[' expr ']'

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 81
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 45

   71 expr: ICAST '(' . expr ')'

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 82
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 46

   72 expr: FCAST '(' . expr ')'

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 83
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 47

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr
   70     | '(' expr . ')'

    EQ       shift, and go to state 51
    NEQ      shift, and go to state 52
    GE       shift, and go to state 53
    LE       shift, and go to state 54
    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65
    ')'      shift, and go to state 84


State 48

   46 numListList: numListList . '{' numList '}'
   89 rvalue: '{' numListList . '}'

    '{'  shift, and go to state 85
    '}'  shift, and go to state 86


State 49

   48 numList: numList . ',' num
   88 rvalue: '{' numList . '}'

    ','  shift, and go to state 87
    '}'  shift, and go to state 88


State 50

   49 numList: num .

    $default  reduce using rule 49 (numList)


State 51

   60 expr: expr EQ . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 89
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 52

   61 expr: expr NEQ . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 90
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 53

   62 expr: expr GE . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 91
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 54

   63 expr: expr LE . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 92
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 55

   66 expr: expr AND . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 93
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 56

   67 expr: expr OR . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 94
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 57

   65 expr: expr '<' . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 95
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 58

   64 expr: expr '>' . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 96
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 59

   53 expr: expr '+' . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 97
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 60

   54 expr: expr '-' . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 98
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 61

   57 expr: expr '%' . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 99
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 62

   55 expr: expr '*' . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 100
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 63

   56 expr: expr '/' . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 101
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 64

   58 expr: expr '@' . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 102
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 65

   59 expr: expr MAT_POW . expr

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 103
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 66

   15 declOrdeclInitVar: typeAndNameSign '=' rvalue error .

    $default  reduce using rule 15 (declOrdeclInitVar)


State 67

   14 declOrdeclInitVar: typeAndNameSign '=' rvalue ';' .

    $default  reduce using rule 14 (declOrdeclInitVar)


State 68

   20 param: BASE_TYPE . ID
   21      | BASE_TYPE . ID '[' ']'

    ID  shift, and go to state 104


State 69

   22 param: MAT_TYPE . BASE_TYPE ID

    BASE_TYPE  shift, and go to state 105


State 70

   45 defFun: BASE_TYPE ID '(' $@2 paramListVoid . ')' '{' declList localStmtList '}'

    ')'  shift, and go to state 106


State 71

   16 paramListVoid: paramList .
   18 paramList: paramList . ',' param

    ','  shift, and go to state 107

    $default  reduce using rule 16 (paramListVoid)


State 72

   19 paramList: param .

    $default  reduce using rule 19 (paramList)


State 73

   11 typeAndNameSign: BASE_TYPE ID '[' num ']' .

    $default  reduce using rule 11 (typeAndNameSign)


State 74

    9 declFun: AHEAD BASE_TYPE ID $@1 '(' . paramListVoid ')'

    BASE_TYPE  shift, and go to state 68
    MAT_TYPE   shift, and go to state 69

    $default  reduce using rule 17 (paramListVoid)

    paramListVoid  go to state 108
    paramList      go to state 71
    param          go to state 72


State 75

   12 typeAndNameSign: MAT_TYPE BASE_TYPE ID '[' num . ']' '[' num ']'

    ']'  shift, and go to state 109


State 76

   81 arg: ID . '(' expr ')' '(' expr ')'
   84 lvalue: ID .
   85       | ID . '[' expr ']'
   86       | ID . '[' expr ']' '[' expr ']'

    '('  shift, and go to state 110
    '['  shift, and go to state 44

    $default  reduce using rule 84 (lvalue)


State 77

   77 call: ID '(' ')' .

    $default  reduce using rule 77 (call)


State 78

   76 call: ID '(' argList . ')'
   78 argList: argList . ',' arg

    ')'  shift, and go to state 111
    ','  shift, and go to state 112


State 79

   79 argList: arg .

    $default  reduce using rule 79 (argList)


State 80

   80 arg: lvalue .

    $default  reduce using rule 80 (arg)


State 81

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr
   85 lvalue: ID '[' expr . ']'
   86       | ID '[' expr . ']' '[' expr ']'

    EQ       shift, and go to state 51
    NEQ      shift, and go to state 52
    GE       shift, and go to state 53
    LE       shift, and go to state 54
    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65
    ']'      shift, and go to state 113


State 82

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr
   71     | ICAST '(' expr . ')'

    EQ       shift, and go to state 51
    NEQ      shift, and go to state 52
    GE       shift, and go to state 53
    LE       shift, and go to state 54
    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65
    ')'      shift, and go to state 114


State 83

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr
   72     | FCAST '(' expr . ')'

    EQ       shift, and go to state 51
    NEQ      shift, and go to state 52
    GE       shift, and go to state 53
    LE       shift, and go to state 54
    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65
    ')'      shift, and go to state 115


State 84

   70 expr: '(' expr ')' .

    $default  reduce using rule 70 (expr)


State 85

   46 numListList: numListList '{' . numList '}'

    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26

    numList  go to state 116
    num      go to state 50


State 86

   89 rvalue: '{' numListList '}' .

    $default  reduce using rule 89 (rvalue)


State 87

   48 numList: numList ',' . num

    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26

    num  go to state 117


State 88

   88 rvalue: '{' numList '}' .

    $default  reduce using rule 88 (rvalue)


State 89

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   60     | expr EQ expr .
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 60 (expr)


State 90

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   61     | expr NEQ expr .
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 61 (expr)


State 91

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   62     | expr GE expr .
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 62 (expr)


State 92

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   63     | expr LE expr .
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 63 (expr)


State 93

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   66     | expr AND expr .
   67     | expr . OR expr

    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 66 (expr)


State 94

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr
   67     | expr OR expr .

    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 67 (expr)


State 95

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   65     | expr '<' expr .
   66     | expr . AND expr
   67     | expr . OR expr

    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 65 (expr)


State 96

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   64     | expr '>' expr .
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 64 (expr)


State 97

   53 expr: expr . '+' expr
   53     | expr '+' expr .
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 53 (expr)


State 98

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   54     | expr '-' expr .
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 54 (expr)


State 99

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   57     | expr '%' expr .
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 57 (expr)


State 100

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   55     | expr '*' expr .
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 55 (expr)


State 101

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   56     | expr '/' expr .
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 56 (expr)


State 102

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   58     | expr '@' expr .
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65

    $default  reduce using rule 58 (expr)


State 103

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   59     | expr MAT_POW expr .
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    MAT_POW  shift, and go to state 65

    $default  reduce using rule 59 (expr)


State 104

   20 param: BASE_TYPE ID .
   21      | BASE_TYPE ID . '[' ']'

    '['  shift, and go to state 118

    $default  reduce using rule 20 (param)


State 105

   22 param: MAT_TYPE BASE_TYPE . ID

    ID  shift, and go to state 119


State 106

   45 defFun: BASE_TYPE ID '(' $@2 paramListVoid ')' . '{' declList localStmtList '}'

    '{'  shift, and go to state 120


State 107

   18 paramList: paramList ',' . param

    BASE_TYPE  shift, and go to state 68
    MAT_TYPE   shift, and go to state 69

    param  go to state 121


State 108

    9 declFun: AHEAD BASE_TYPE ID $@1 '(' paramListVoid . ')'

    ')'  shift, and go to state 122


State 109

   12 typeAndNameSign: MAT_TYPE BASE_TYPE ID '[' num ']' . '[' num ']'

    '['  shift, and go to state 123


State 110

   81 arg: ID '(' . expr ')' '(' expr ')'

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 124
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 111

   76 call: ID '(' argList ')' .

    $default  reduce using rule 76 (call)


State 112

   78 argList: argList ',' . arg

    ID  shift, and go to state 76

    arg     go to state 125
    lvalue  go to state 80


State 113

   85 lvalue: ID '[' expr ']' .
   86       | ID '[' expr ']' . '[' expr ']'

    '['  shift, and go to state 126

    $default  reduce using rule 85 (lvalue)


State 114

   71 expr: ICAST '(' expr ')' .

    $default  reduce using rule 71 (expr)


State 115

   72 expr: FCAST '(' expr ')' .

    $default  reduce using rule 72 (expr)


State 116

   46 numListList: numListList '{' numList . '}'
   48 numList: numList . ',' num

    ','  shift, and go to state 87
    '}'  shift, and go to state 127


State 117

   48 numList: numList ',' num .

    $default  reduce using rule 48 (numList)


State 118

   21 param: BASE_TYPE ID '[' . ']'

    ']'  shift, and go to state 128


State 119

   22 param: MAT_TYPE BASE_TYPE ID .

    $default  reduce using rule 22 (param)


State 120

   45 defFun: BASE_TYPE ID '(' $@2 paramListVoid ')' '{' . declList localStmtList '}'

    $default  reduce using rule 52 (declList)

    declList  go to state 129


State 121

   18 paramList: paramList ',' param .

    $default  reduce using rule 18 (paramList)


State 122

    9 declFun: AHEAD BASE_TYPE ID $@1 '(' paramListVoid ')' .

    $default  reduce using rule 9 (declFun)


State 123

   12 typeAndNameSign: MAT_TYPE BASE_TYPE ID '[' num ']' '[' . num ']'

    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26

    num  go to state 130


State 124

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr
   81 arg: ID '(' expr . ')' '(' expr ')'

    EQ       shift, and go to state 51
    NEQ      shift, and go to state 52
    GE       shift, and go to state 53
    LE       shift, and go to state 54
    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65
    ')'      shift, and go to state 131


State 125

   78 argList: argList ',' arg .

    $default  reduce using rule 78 (argList)


State 126

   86 lvalue: ID '[' expr ']' '[' . expr ']'

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 132
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 127

   46 numListList: numListList '{' numList '}' .

    $default  reduce using rule 46 (numListList)


State 128

   21 param: BASE_TYPE ID '[' ']' .

    $default  reduce using rule 21 (param)


State 129

   45 defFun: BASE_TYPE ID '(' $@2 paramListVoid ')' '{' declList . localStmtList '}'
   51 declList: declList . declOrdeclInitVar

    BASE_TYPE  shift, and go to state 133
    MAT_TYPE   shift, and go to state 6

    $default  reduce using rule 24 (localStmtList)

    typeAndNameSign    go to state 9
    declOrdeclInitVar  go to state 134
    localStmtList      go to state 135


State 130

   12 typeAndNameSign: MAT_TYPE BASE_TYPE ID '[' num ']' '[' num . ']'

    ']'  shift, and go to state 136


State 131

   81 arg: ID '(' expr ')' . '(' expr ')'

    '('  shift, and go to state 137


State 132

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr
   86 lvalue: ID '[' expr ']' '[' expr . ']'

    EQ       shift, and go to state 51
    NEQ      shift, and go to state 52
    GE       shift, and go to state 53
    LE       shift, and go to state 54
    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65
    ']'      shift, and go to state 138


State 133

   10 typeAndNameSign: BASE_TYPE . ID
   11                | BASE_TYPE . ID '[' num ']'

    ID  shift, and go to state 139


State 134

   51 declList: declList declOrdeclInitVar .

    $default  reduce using rule 51 (declList)


State 135

   23 localStmtList: localStmtList . localStmt
   45 defFun: BASE_TYPE ID '(' $@2 paramListVoid ')' '{' declList localStmtList . '}'

    WHILE   shift, and go to state 140
    IF      shift, and go to state 141
    ID      shift, and go to state 27
    RETURN  shift, and go to state 142
    PRINT   shift, and go to state 143
    IREAD   shift, and go to state 144
    FREAD   shift, and go to state 145
    COPY    shift, and go to state 146
    ';'     shift, and go to state 147
    '}'     shift, and go to state 148

    localStmt    go to state 149
    flowControl  go to state 150
    loop         go to state 151
    call         go to state 152
    lvalue       go to state 153


State 136

   12 typeAndNameSign: MAT_TYPE BASE_TYPE ID '[' num ']' '[' num ']' .

    $default  reduce using rule 12 (typeAndNameSign)


State 137

   81 arg: ID '(' expr ')' '(' . expr ')'

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 154
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 138

   86 lvalue: ID '[' expr ']' '[' expr ']' .

    $default  reduce using rule 86 (lvalue)


State 139

   10 typeAndNameSign: BASE_TYPE ID .
   11                | BASE_TYPE ID . '[' num ']'

    '['  shift, and go to state 20

    $default  reduce using rule 10 (typeAndNameSign)


State 140

   43 loop: WHILE . '(' expr ')' block

    '('  shift, and go to state 155


State 141

   37 flowControl: IF . '(' expr ')' block ELSE flowControl
   38            | IF . '(' expr ')' block ELSE block
   39            | IF . '(' expr ')' block
   40            | IF . '(' expr error block ELSE block
   41            | IF . error expr ')' block ELSE block
   42            | IF . '(' error ')' block

    error  shift, and go to state 156
    '('    shift, and go to state 157


State 142

   29 localStmt: RETURN . expr ';'
   30          | RETURN . expr error

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 158
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 143

   33 localStmt: PRINT . '(' rvalue ')' ';'
   34          | PRINT . '(' V_ASCII ')' ';'

    '('  shift, and go to state 159


State 144

   31 localStmt: IREAD . '(' lvalue ')' ';'

    '('  shift, and go to state 160


State 145

   32 localStmt: FREAD . '(' lvalue ')' ';'

    '('  shift, and go to state 161


State 146

   35 localStmt: COPY . '(' lvalue lvalue ')' ';'

    '('  shift, and go to state 162


State 147

   36 localStmt: ';' .

    $default  reduce using rule 36 (localStmt)


State 148

   45 defFun: BASE_TYPE ID '(' $@2 paramListVoid ')' '{' declList localStmtList '}' .

    $default  reduce using rule 45 (defFun)


State 149

   23 localStmtList: localStmtList localStmt .

    $default  reduce using rule 23 (localStmtList)


State 150

   27 localStmt: flowControl .

    $default  reduce using rule 27 (localStmt)


State 151

   28 localStmt: loop .

    $default  reduce using rule 28 (localStmt)


State 152

   25 localStmt: call . ';'

    ';'  shift, and go to state 163


State 153

   26 localStmt: lvalue . '=' rvalue ';'

    '='  shift, and go to state 164


State 154

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr
   81 arg: ID '(' expr ')' '(' expr . ')'

    EQ       shift, and go to state 51
    NEQ      shift, and go to state 52
    GE       shift, and go to state 53
    LE       shift, and go to state 54
    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65
    ')'      shift, and go to state 165


State 155

   43 loop: WHILE '(' . expr ')' block

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 166
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 156

   41 flowControl: IF error . expr ')' block ELSE block

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 167
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 157

   37 flowControl: IF '(' . expr ')' block ELSE flowControl
   38            | IF '(' . expr ')' block ELSE block
   39            | IF '(' . expr ')' block
   40            | IF '(' . expr error block ELSE block
   42            | IF '(' . error ')' block

    error    shift, and go to state 168
    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30

    expr    go to state 169
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35


State 158

   29 localStmt: RETURN expr . ';'
   30          | RETURN expr . error
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    error    shift, and go to state 170
    EQ       shift, and go to state 51
    NEQ      shift, and go to state 52
    GE       shift, and go to state 53
    LE       shift, and go to state 54
    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65
    ';'      shift, and go to state 171


State 159

   33 localStmt: PRINT '(' . rvalue ')' ';'
   34          | PRINT '(' . V_ASCII ')' ';'

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    V_ASCII  shift, and go to state 172
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31

    expr    go to state 32
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35
    rvalue  go to state 173


State 160

   31 localStmt: IREAD '(' . lvalue ')' ';'

    ID  shift, and go to state 174

    lvalue  go to state 175


State 161

   32 localStmt: FREAD '(' . lvalue ')' ';'

    ID  shift, and go to state 174

    lvalue  go to state 176


State 162

   35 localStmt: COPY '(' . lvalue lvalue ')' ';'

    ID  shift, and go to state 174

    lvalue  go to state 177


State 163

   25 localStmt: call ';' .

    $default  reduce using rule 25 (localStmt)


State 164

   26 localStmt: lvalue '=' . rvalue ';'

    '!'      shift, and go to state 23
    '&'      shift, and go to state 24
    V_INT    shift, and go to state 25
    V_FLOAT  shift, and go to state 26
    ID       shift, and go to state 27
    ICAST    shift, and go to state 28
    FCAST    shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31

    expr    go to state 32
    call    go to state 33
    num     go to state 34
    lvalue  go to state 35
    rvalue  go to state 178


State 165

   81 arg: ID '(' expr ')' '(' expr ')' .

    $default  reduce using rule 81 (arg)


State 166

   43 loop: WHILE '(' expr . ')' block
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    EQ       shift, and go to state 51
    NEQ      shift, and go to state 52
    GE       shift, and go to state 53
    LE       shift, and go to state 54
    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65
    ')'      shift, and go to state 179


State 167

   41 flowControl: IF error expr . ')' block ELSE block
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    EQ       shift, and go to state 51
    NEQ      shift, and go to state 52
    GE       shift, and go to state 53
    LE       shift, and go to state 54
    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65
    ')'      shift, and go to state 180


State 168

   42 flowControl: IF '(' error . ')' block

    ')'  shift, and go to state 181


State 169

   37 flowControl: IF '(' expr . ')' block ELSE flowControl
   38            | IF '(' expr . ')' block ELSE block
   39            | IF '(' expr . ')' block
   40            | IF '(' expr . error block ELSE block
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . '@' expr
   59     | expr . MAT_POW expr
   60     | expr . EQ expr
   61     | expr . NEQ expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . AND expr
   67     | expr . OR expr

    error    shift, and go to state 182
    EQ       shift, and go to state 51
    NEQ      shift, and go to state 52
    GE       shift, and go to state 53
    LE       shift, and go to state 54
    AND      shift, and go to state 55
    OR       shift, and go to state 56
    '<'      shift, and go to state 57
    '>'      shift, and go to state 58
    '+'      shift, and go to state 59
    '-'      shift, and go to state 60
    '%'      shift, and go to state 61
    '*'      shift, and go to state 62
    '/'      shift, and go to state 63
    '@'      shift, and go to state 64
    MAT_POW  shift, and go to state 65
    ')'      shift, and go to state 183


State 170

   30 localStmt: RETURN expr error .

    $default  reduce using rule 30 (localStmt)


State 171

   29 localStmt: RETURN expr ';' .

    $default  reduce using rule 29 (localStmt)


State 172

   34 localStmt: PRINT '(' V_ASCII . ')' ';'

    ')'  shift, and go to state 184


State 173

   33 localStmt: PRINT '(' rvalue . ')' ';'

    ')'  shift, and go to state 185


State 174

   84 lvalue: ID .
   85       | ID . '[' expr ']'
   86       | ID . '[' expr ']' '[' expr ']'

    '['  shift, and go to state 44

    $default  reduce using rule 84 (lvalue)


State 175

   31 localStmt: IREAD '(' lvalue . ')' ';'

    ')'  shift, and go to state 186


State 176

   32 localStmt: FREAD '(' lvalue . ')' ';'

    ')'  shift, and go to state 187


State 177

   35 localStmt: COPY '(' lvalue . lvalue ')' ';'

    ID  shift, and go to state 174

    lvalue  go to state 188


State 178

   26 localStmt: lvalue '=' rvalue . ';'

    ';'  shift, and go to state 189


State 179

   43 loop: WHILE '(' expr ')' . block

    '{'  shift, and go to state 190

    block  go to state 191


State 180

   41 flowControl: IF error expr ')' . block ELSE block

    '{'  shift, and go to state 190

    block  go to state 192


State 181

   42 flowControl: IF '(' error ')' . block

    '{'  shift, and go to state 190

    block  go to state 193


State 182

   40 flowControl: IF '(' expr error . block ELSE block

    '{'  shift, and go to state 190

    block  go to state 194


State 183

   37 flowControl: IF '(' expr ')' . block ELSE flowControl
   38            | IF '(' expr ')' . block ELSE block
   39            | IF '(' expr ')' . block

    '{'  shift, and go to state 190

    block  go to state 195


State 184

   34 localStmt: PRINT '(' V_ASCII ')' . ';'

    ';'  shift, and go to state 196


State 185

   33 localStmt: PRINT '(' rvalue ')' . ';'

    ';'  shift, and go to state 197


State 186

   31 localStmt: IREAD '(' lvalue ')' . ';'

    ';'  shift, and go to state 198


State 187

   32 localStmt: FREAD '(' lvalue ')' . ';'

    ';'  shift, and go to state 199


State 188

   35 localStmt: COPY '(' lvalue lvalue . ')' ';'

    ')'  shift, and go to state 200


State 189

   26 localStmt: lvalue '=' rvalue ';' .

    $default  reduce using rule 26 (localStmt)


State 190

   50 block: '{' . localStmtList '}'

    $default  reduce using rule 24 (localStmtList)

    localStmtList  go to state 201


State 191

   43 loop: WHILE '(' expr ')' block .

    $default  reduce using rule 43 (loop)


State 192

   41 flowControl: IF error expr ')' block . ELSE block

    ELSE  shift, and go to state 202


State 193

   42 flowControl: IF '(' error ')' block .

    $default  reduce using rule 42 (flowControl)


State 194

   40 flowControl: IF '(' expr error block . ELSE block

    ELSE  shift, and go to state 203


State 195

   37 flowControl: IF '(' expr ')' block . ELSE flowControl
   38            | IF '(' expr ')' block . ELSE block
   39            | IF '(' expr ')' block .

    ELSE  shift, and go to state 204

    $default  reduce using rule 39 (flowControl)


State 196

   34 localStmt: PRINT '(' V_ASCII ')' ';' .

    $default  reduce using rule 34 (localStmt)


State 197

   33 localStmt: PRINT '(' rvalue ')' ';' .

    $default  reduce using rule 33 (localStmt)


State 198

   31 localStmt: IREAD '(' lvalue ')' ';' .

    $default  reduce using rule 31 (localStmt)


State 199

   32 localStmt: FREAD '(' lvalue ')' ';' .

    $default  reduce using rule 32 (localStmt)


State 200

   35 localStmt: COPY '(' lvalue lvalue ')' . ';'

    ';'  shift, and go to state 205


State 201

   23 localStmtList: localStmtList . localStmt
   50 block: '{' localStmtList . '}'

    WHILE   shift, and go to state 140
    IF      shift, and go to state 141
    ID      shift, and go to state 27
    RETURN  shift, and go to state 142
    PRINT   shift, and go to state 143
    IREAD   shift, and go to state 144
    FREAD   shift, and go to state 145
    COPY    shift, and go to state 146
    ';'     shift, and go to state 147
    '}'     shift, and go to state 206

    localStmt    go to state 149
    flowControl  go to state 150
    loop         go to state 151
    call         go to state 152
    lvalue       go to state 153


State 202

   41 flowControl: IF error expr ')' block ELSE . block

    '{'  shift, and go to state 190

    block  go to state 207


State 203

   40 flowControl: IF '(' expr error block ELSE . block

    '{'  shift, and go to state 190

    block  go to state 208


State 204

   37 flowControl: IF '(' expr ')' block ELSE . flowControl
   38            | IF '(' expr ')' block ELSE . block

    IF   shift, and go to state 141
    '{'  shift, and go to state 190

    flowControl  go to state 209
    block        go to state 210


State 205

   35 localStmt: COPY '(' lvalue lvalue ')' ';' .

    $default  reduce using rule 35 (localStmt)


State 206

   50 block: '{' localStmtList '}' .

    $default  reduce using rule 50 (block)


State 207

   41 flowControl: IF error expr ')' block ELSE block .

    $default  reduce using rule 41 (flowControl)


State 208

   40 flowControl: IF '(' expr error block ELSE block .

    $default  reduce using rule 40 (flowControl)


State 209

   37 flowControl: IF '(' expr ')' block ELSE flowControl .

    $default  reduce using rule 37 (flowControl)


State 210

   38 flowControl: IF '(' expr ')' block ELSE block .

    $default  reduce using rule 38 (flowControl)
